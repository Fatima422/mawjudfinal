import 'package:flutter/material.dart';import 'package:firebase_auth/firebase_auth.dart';import 'package:fluttertoast/fluttertoast.dart';import 'package:mawjud_1/screens/dashboard.dart';class LoginScreen extends StatefulWidget {  const LoginScreen({Key? key}) : super(key: key);  @override  _LoginScreenState createState() => _LoginScreenState();}class _LoginScreenState extends State<LoginScreen> {  // form key  //final _formKey = GlobalKey<FormState>();  // editing controller  final TextEditingController emailController = new TextEditingController();  final TextEditingController passController = new TextEditingController();  // firebase  FirebaseAuth _auth = FirebaseAuth.instance;  // string for displaying the error Message  String? errorMessage;  @override  Widget build(BuildContext context) {    return Scaffold(      resizeToAvoidBottomInset: false,      backgroundColor: const Color(0xFFFAFAFA),      body: GestureDetector(        child: Column(          mainAxisSize: MainAxisSize.max,          children: [            Expanded(              child: Stack(                children: [                  Container(                    width: MediaQuery                        .of(context)                        .size                        .width,                    height: 189.2,                    decoration: const BoxDecoration(                      gradient: LinearGradient(                        colors: [Color(0xFF004146), Color(0xFF3D9CA3)],                        stops: [0, 1],                        begin: AlignmentDirectional(0, -1),                        end: AlignmentDirectional(0, 1),                      ),                    ),                  ),                  Align(                    alignment: const AlignmentDirectional(0, 0),                    child: Padding(                      padding:                      const EdgeInsetsDirectional.fromSTEB(0, 99, 0, 0),                      child: Container(                        width: double.infinity,                        height: 720,                        decoration: const BoxDecoration(                          color: Color(0xFFFAFAFA),                          borderRadius: BorderRadius.only(                            bottomLeft: Radius.circular(0),                            bottomRight: Radius.circular(0),                            topLeft: Radius.circular(60),                            topRight: Radius.circular(60),                          ),                        ),                        child: Padding(                          padding:                          const EdgeInsetsDirectional.fromSTEB(0, 0, 0, 0),                          child: Column(                            mainAxisSize: MainAxisSize.max,                            children: [                              Padding(                                padding: const EdgeInsetsDirectional.fromSTEB(                                    0, 9, 0, 25),                                child: Image.asset(                                  'assets/images/profile.png',                                  width:                                  MediaQuery                                      .of(context)                                      .size                                      .width * 0.60,                                  height:                                  MediaQuery                                      .of(context)                                      .size                                      .height * 0.30,                                  fit: BoxFit.cover,                                ),                              ),                              Padding(                                padding: const EdgeInsetsDirectional.fromSTEB(                                    0, 0, 0, 10),                                child: Container(                                  width:                                  MediaQuery                                      .of(context)                                      .size                                      .width * 0.85,                                  height: 55,                                  constraints: const BoxConstraints(                                    maxWidth: double.infinity,                                    maxHeight: double.infinity,                                  ),                                  decoration: BoxDecoration(                                    color: const Color(0xFFECEEEE),                                    boxShadow: const [                                      BoxShadow(                                        blurRadius: 6,                                        color: Color(0x21000000),                                        offset: Offset(0, 3),                                      )                                    ],                                    borderRadius: BorderRadius.circular(11),                                  ),                                  child: Padding(                                    padding:                                    const EdgeInsetsDirectional.fromSTEB(                                        18, 10, 22, 0),                                    child: SizedBox(                                      width: MediaQuery                                          .of(context)                                          .size                                          .width *                                          0.88,                                      child: TextFormField(                                        autofocus: true,                                        obscureText: false,                                        controller: emailController,                                        validator: (value) {                                          if (value!.isEmpty) {                                            return ("Please Enter Your Email");                                          }                                          // reg expression for email validation                                          if (!RegExp("^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+.[a-z]")                                              .hasMatch(value)) {                                            return ("Please Enter a valid email");                                          }                                          return null;                                        },                                        onSaved: (value) {                                        emailController.text = value!;},                                        textInputAction: TextInputAction.done,                                        decoration: const InputDecoration(                                          hintText: 'أدخل اسم المستخدم',                                          enabledBorder: InputBorder.none,                                          focusedBorder: InputBorder.none,                                          errorBorder: InputBorder.none,                                          focusedErrorBorder: InputBorder.none,                                          contentPadding:                                          EdgeInsetsDirectional.fromSTEB(                                              1, 5, 0, 0),                                          prefixIcon: Icon(                                            Icons.email,                                            color: Color(0xFFA5ABAC),                                            size: 24,                                          ),                                        ),                                        style: Theme                                            .of(context)                                            .textTheme                                            .bodyText1                                            ?.copyWith(                                          fontFamily: 'Tajawal',                                          color: const Color(0xFFA5ABAC),                                          fontSize: 16,                                          fontWeight: FontWeight.w500,                                        ),                                        textAlign: TextAlign.end,                                        keyboardType:                                        TextInputType.emailAddress,                                      ),                                    ),                                  ),                                ),                              ),                              Padding(                                padding: const EdgeInsetsDirectional.fromSTEB(                                    0, 0, 0, 90),                                child: Container(                                  width:                                  MediaQuery                                      .of(context)                                      .size                                      .width * 0.85,                                  height: 55,                                  constraints: const BoxConstraints(                                    maxWidth: double.infinity,                                    maxHeight: double.infinity,                                  ),                                  decoration: BoxDecoration(                                    color: const Color(0xFFECEEEE),                                    boxShadow: const [                                      BoxShadow(                                        blurRadius: 6,                                        color: Color(0x20000000),                                        offset: Offset(0, 3),                                      )                                    ],                                    borderRadius: BorderRadius.circular(11),                                  ),                                  child: Padding(                                    padding:                                    const EdgeInsetsDirectional.fromSTEB(                                        20, 13, 22, 0),                                    child: SizedBox(                                      width: MediaQuery                                          .of(context)                                          .size                                          .width *                                          0.88,                                      child: TextFormField(                                        controller: passController,                                        autofocus: false,                                        obscureText: true,                                        validator: (value) {                                          RegExp regex = new RegExp(r'^.{8,}$');                                          if (value!.isEmpty) {                                            return ("Password is required for login");                                          }                                          if (!regex.hasMatch(value)) {                                            return ("Enter Valid Password(Min. 8 Character)");                                          }                                        },                                        onSaved: (value) {                                          passController.text = value!;                                        },                                        textInputAction: TextInputAction.done,                                        decoration: const InputDecoration(                                          hintText: 'أدخل كلمة السر',                                          enabledBorder: InputBorder.none,                                          focusedBorder: InputBorder.none,                                          errorBorder: InputBorder.none,                                          focusedErrorBorder: InputBorder.none,                                          contentPadding:                                          EdgeInsetsDirectional                                              .fromSTEB(1, 5, 0, 0),                                          prefixIcon: Icon(                                            Icons.lock,                                            color: Color(0xFFA5ABAC),                                            size: 24,                                          ),                                        ),                                        style: Theme                                            .of(context)                                            .textTheme                                            .bodyText1                                            ?.copyWith(                                          fontFamily: 'Tajawal',                                          color: const Color(0xFFA5ABAC),                                          fontSize: 16,                                          fontWeight: FontWeight.w500,                                        ),                                        textAlign: TextAlign.end,                                        keyboardType:                                        TextInputType.emailAddress,                                      ),                                    ),                                  ),                                ),                              ),                              Container(                                width: MediaQuery                                    .of(context)                                    .size                                    .width *0.85,                                height: 55,                                decoration: BoxDecoration(                                  gradient: const LinearGradient(                                    colors: [                                      Color(0xFF3D9CA3),                                      Color(0xFF004146)                                    ],                                  ),                                  borderRadius: BorderRadius.circular(11),                                ),                                child: MaterialButton(                                  elevation: 3,                                  onPressed: () async{                                    final user = await signIn(emailController.text,                                      passController.text);                                    if (user == null) {                                      return;}                                  },                                  child: Text(                                    'تسجيل الدخول',                                    style: Theme                                        .of(context)                                        .textTheme                                        .subtitle2                                        ?.copyWith(                                      fontFamily: 'Tajawal',                                      color: Colors.white,                                      fontSize: 21,                                      fontWeight: FontWeight.w600,                                    ),                                  ),                                ),                              ),                            ],                          ),                        ),                      ),                    ),                  ),                ],              ),            ),          ],        ),      ),    );  }Future signIn(String email, String password) async {    try {      await _auth          .signInWithEmailAndPassword(email: email, password: password)          .then((uid) => {        Fluttertoast.showToast(msg: "Login Successful"),        Navigator.push(context,MaterialPageRoute(          builder: (context) => const DashbordScreen())),      });    } on FirebaseAuthException catch (error) {      switch (error.code) {        case "wrong-password":          errorMessage = "Your password is wrong.";          break;        case "user-not-found":          errorMessage = "User with this email doesn't exist.";          break;        default:          errorMessage = "An undefined Error happened.";      }      Fluttertoast.showToast(msg: errorMessage!);      print(error.code);    }  }}